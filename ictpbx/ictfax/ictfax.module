<?php
/******************************************************************
* Copyright Â© 2012 ICT Innovations Pakistan All Rights Reserved   *
* Developed By: Falak Nawaz                                       *
*             : Nasir Iqbal                                       *
*             : Tahir Almas                                       *
* Website : http://www.ictinnovations.com/                        *
* Mail : info@ictinnovations.com                                  *
******************************************************************/
/**
* Sending FAX Module
* Conversion to Drupal 7x
* 23 Feb 2012
*/

// Include the PHP Plivo Rest library
require_once "lib/plivohelper.php";

/**
* Display help and module information
* @param section which section of the site we're displaying help
* @return help text for section
*/

function ictfax_help($section='') {
  $output = '';
  switch ($section) {
    case "admin/modules#description":
      $output = t("ICTBilling Fax Account");
      break;
  }
  return $output;
} // function ictfax_help


function ictfax_menu() {
  $items = array();

  $items['ictfax'] = array(
    'title'            => t('Fax Account'),
    'description'      => 'Fax Account',
    'page callback'    => 'system_admin_menu_block_page',
    'file'             => 'system.admin.inc',
    'file path'        => drupal_get_path('module', 'system'),
    'access callback'  => 'ictfax_access',
    'access arguments' => array('can use ictfax'),
    'position'         => 'left',
    'weight'           => -10,
  );
  
  $items['ictfax/outbox'] = array(
    'title'            => t('Fax Outbox'),
    'description'      => 'Fax Outbox',
    'page callback'    => 'ictfax_list_faxs',
    'access callback'  => 'ictfax_access',
    'access arguments' => array('can use ictfax'),
    'type'             => MENU_NORMAL_ITEM,
    'weight'           => 10,
  );  

  $items['ictfax/outbox/list'] = array(
    'title'            => t('List'),
    'description'      => 'Fax Account',
    'page callback'    => 'ictfax_list_faxs',
    'access callback'  => 'ictfax_access',
    'access arguments' => array('can use ictfax'),
    'type'             => MENU_DEFAULT_LOCAL_TASK,
    'weight'           => 10,
  );

  // shows form to add new
  $items['ictfax/outbox/add'] = array(
    'title'            => t('Create new Fax'),
    'description'      => 'Creates a new Fax',
    'page callback'    => 'drupal_get_form',
    'page arguments'   => array('ictfax_form', array()),
    'access callback'  => 'ictfax_access',
    'access arguments' => array('can use ictfax'),
    'type'             => MENU_LOCAL_TASK,
    'weight'           => 11,
  );
  
  $items['ictfax/inbox'] = array(
    'title'            => t('Fax Inbox'),
    'description'      => 'Fax Inbox',
    'page callback'    => 'ictfax_list_did_faxs',
    'access callback'  => 'ictfax_access',
    'access arguments' => array('can use ictfax'),
    'type'             => MENU_NORMAL_ITEM,
    'weight'           => 11,
  );

  $items['ictfax/%ictfax/edit'] = array(
    'title'            => t('Edit Fax'),
    'description'      => 'Edit Fax',
    'page callback'    => 'drupal_get_form',
    'page arguments'   => array('ictfax_form', 1),
    'access callback'  => 'ictfax_access',
    'access arguments' => array('can use ictfax'),
    'type' => MENU_CALLBACK,
  );
  
  $items['ictfax/%ictfax/delete'] = array(
    'title'            => t('Delete Fax'),
    'description'      => 'Delete Fax',
    'page callback'    => 'ictfax_delete',
    'page arguments'   => array(1),
    'access callback'  => 'ictfax_access',
    'access arguments' => array('can use ictfax'),
    'type' => MENU_CALLBACK,
  );
  
  $items['ictfax/%ictfax/resend'] = array(
    'title'            => t('Resend Fax'),
    'description'      => 'Resend Fax',
    'page callback'    => 'drupal_get_form',
    'page arguments'   => array('ictfax_resend', 1),
    'access callback'  => 'ictfax_access',
    'access arguments' => array('can use ictfax'),
    'type' => MENU_CALLBACK,
    //'weight' => -10,
  );
   
  $items['ictfax/%ictfax/view'] = array(
    'title'            => t('View Fax'),
    'description'      => 'View Fax',
    'page callback'    => 'drupal_get_form',
    'page arguments'   => array('ictfax_view', 1),
    'access callback'  => 'ictfax_access',
    'access arguments' => array('can use ictfax'),
//    'type' => MENU_DEFAULT_LOCAL_TASK,
    //'weight' => -10,
  );

  $items['ictfax/phonebookpopup'] = array(
    'title'            => t('Phonebook Popup'),
    'description'      => 'Phonebook Popup',
    'page callback'    => 'ictfax_popup',
//    'page arguments'   => array('ictfax_list_contacts'),    
    'access callback'  => 'ictfax_access',
    'access arguments' => array('can use ictfax'),
    'type' => MENU_CALLBACK,
  );
  
  /* Plivo URLs */
  // send fax from web or email
  $items['ictfax/send_fax/%'] = array(
    'title'            => 'Send Fax',
    'description'      => 'Sends Fax',
    'page callback'    => 'ictfax_send_fax',
    'page arguments'   => array(2),
    'access callback'  => 'ictfax_access',
    'access arguments' => array('can use ictfax'),
    'type'             => MENU_CALLBACK,
  );

  // Post send fax status e.g. email, cdr and billing
  $items['ictfax/send_fax_hangup/%'] = array(
    'title'            => 'Send Fax Hangup',
    'description'      => 'Update post fax send status e.g. email, cdr and billing',
    'page callback'    => 'ictfax_send_fax_hangup',
    'page arguments'   => array(2),
    'access callback'  => 'ictfax_access',
    'access arguments' => array('can use ictfax'),
    'type'             => MENU_CALLBACK,
  );

  // receive fax
  $items['ictfax/receive_fax'] = array(
    'title'            => 'Receive Fax',
    'description'      => 'Receive Fax',
    'page callback'    => 'ictfax_receive_fax',
    'access arguments' => array('access content'),
    'type'             => MENU_CALLBACK,
  );
  // send email after fax is received
  $items['ictfax/send_email/%'] = array(
    'title'            => 'Send Fax as Email',
    'description'      => 'Send Fax as Email',
    'page callback'    => 'ictfax_send_email',
    'page arguments'   => array(2),
    'access arguments' => array('access content'),
    'type'             => MENU_CALLBACK,
  );
  
  return $items;
}

/**
 * Implementation of hook_node_name
 */
function ictfax_node_name() {
  $name = t('Fax Account');
  if ( empty($name) ) {
    $name = 'Fax Account';
  }
  return $name;
}

/**
* Valid permissions for this module
* @return array An array of valid permissions for the ictfax module
* At this point, we'll give permission to anyone who can access site content 
* or administrate the module:
*/
function ictfax_permission() {
  return array(
    'can use ictfax'  => array('title'=> 'can use ictfax'),
  );
}

function ictfax_access($access) {
  global $user;
  if (is_array($access)) $access = $access[0];
  if (!user_access($access)) return false;
  return true;
}

function ictfax_fax_outbox_load($cid) {
  $sql    = "SELECT * FROM {fax_outbox} WHERE cid = :cid";
  $result = db_query($sql, array(':cid'=>$cid));
  if ($fax = $result->fetchAssoc()) {
    return $fax;
  }
  else {
    drupal_set_message(t('Specified Recording does not exist! or you have not proper permissions!'), 'error');
    return FALSE;
  }
}

/**
 * This function creates a list of faxs for the specified interface
 */
function ictfax_list_faxs() {
  global $user;

  $header = array(
    array('data' => t('Job ID'), 'field' => 'cid', 'sort' => 'desc'),
    array('data' => t('Send To'), 'field' => 'send_to'),
    array('data' => t('Pages'), 'field' => 'pages'),
    array('data' => t('Fax Status'), 'field' => 'status_string'),
    array('data' => t('Created'), 'field' => 'created'),
    array('data' => t('Action'), 'field' => ''),
  );

  $query = db_select('fax_outbox', 'fax')->extend('PagerDefault');
  $query->fields('fax', array('cid', 'send_to', 'file_name', 'text', 'pages', 'status_string', 'created', 'send_from'));
//  $query->leftjoin('astaccount','acc','fax.send_from = acc.uid');
//  $query->addfield('fax', 'accountcode', 'send_from');
  $query->condition('fax.uid', $user->uid,'=');
  $result = $query->limit(50)         
            ->extend('TableSort')
            ->orderByHeader($header)
            ->execute();
  
  while ($fax = $result->fetchAssoc()) {
    $row_id = $fax['cid'];
    $rows[$row_id][] = check_plain($fax['cid']);
    $rows[$row_id][] = check_plain($fax['send_to']);
    $rows[$row_id][] = check_plain($fax['pages']);
    $rows[$row_id][] = check_plain($fax['status_string']);
    $rows[$row_id][] = check_plain(date('d-M-Y H:i',$fax['created']));
    $rows[$row_id][] = _ictfax_list_links($fax);
  }
  if (!isset($rows)) {
    $rows[] = array(array('data' => t('No faxes have been created to send.'), 'colspan' => 8));
  }
  
  $output = theme('table', array('header'=>$header, 'rows'=>$rows));
  $output .= theme('pager');

  if (!isset($_SESSION['fax_status']) || $_SESSION['fax_status'] == 'in_queue') {
    $output .= ictfax_getJaveScript();
  }
  return $output;
}

function _ictfax_list_links($fax) {
  $links['edit'] = array(
    'title' => t('Edit'),
    'href' => 'ictfax/' . $fax['cid'] . '/edit',
    'html' => TRUE,
  );
  $links['delete'] = array(
    'title' => t('Delete'),
    'href' => 'ictfax/' . $fax['cid'] . '/delete',
    'html' => TRUE,
  );
  return theme('links', array('links'=>$links, 'attributes' => array('class' => array('links', 'inline'))));
}

/**
 * This function creates a list of incomming faxs
 */
function ictfax_list_did_faxs() {
  global $user;
  
  $header = array(
    array('data' => t('Job ID'), 'field' => 'fax_inbox_id', 'sort' => 'desc'),
    array('data' => t('Send To'), 'field' => 'send_to'),
    array('data' => t('Account'), 'field' => 'send_from'),
    array('data' => t('Pages'), 'field' => 'pages'),
    array('data' => t('Fax Status'), 'field' => 'status_string'),
    array('data' => t('Created'), 'field' => 'created'),
    array('data' => t('Action'), 'field' => ''),
  );
  
  $query = db_select('fax_inbox', 'fax')->extend('PagerDefault');
  $query->fields('fax', array('fax_inbox_id', 'send_to', 'send_from', 'pages', 'status_string', 'created'));
  $query->condition('fax.uid', $user->uid,'=');
  $result = $query->limit(50)
            ->extend('TableSort')
            ->orderByHeader($header)
            ->execute(); 
  
  while ($fax = $result->fetchAssoc()) {
    $row_id = $fax['fax_inbox_id'];
    $rows[$row_id][] = check_plain($fax['fax_inbox_id']);
    $rows[$row_id][] = check_plain($fax['send_to']);
    $rows[$row_id][] = check_plain($fax['send_from']); 
    $rows[$row_id][] = check_plain($fax['pages']);
    $rows[$row_id][] = check_plain($fax['status_string']);
    $rows[$row_id][] = check_plain(date('Y-m-d H:i',$fax['created']));
    $rows[$row_id][] = _ictfax_list_incoming_links($fax);
  }
  if (!isset($rows)) {
    $rows[] = array(array('data' => t('No faxes in inbox.'), 'colspan' => 9));
  }
  
  $output = theme('table', array('header'=>$header, 'rows'=>$rows));
  $output .= theme('pager');
  
  return $output;

}

function _ictfax_list_incoming_links($fax) {
  $app = variable_get('ictfax_app_root', 'http://127.0.0.1/ictfax/sites/default/files/ictfax/inbox');
  $links['view'] = array(
    'title' => t('View'),
    'href' => $app . '/' . $fax['fax_inbox_id'] . '.pdf',
    'html' => TRUE,
  );
  $links['delete'] = array(
    'title' => t('Delete'),
    'href' => 'ictfax/' . $fax['fax_inbox_id'] . '/delete',
    'html' => TRUE,
  );
  return theme('links', array('links'=>$links, 'attributes' => array('class' => array('links', 'inline'))));
}


/**
 * Display a page with the fax info
 */
function ictfax_view($fax) {
  
}

/**
 * Loads a fax
 */
function ictfax_load($cid) {
  global $user;
  if($cid != null) {
    $result = db_query('SELECT * FROM fax_outbox WHERE cid = :cid AND uid=:uid', array(':cid'=>$cid, ':uid'=>$user->uid));
    if ($fax = $result->fetchAssoc()) {
      return $fax;
    }
    else {
      drupal_set_message(t('Specified Fax does not exist! or you have not proper permissions!'), 'error');
      return FALSE;
    }
  }
}
/*
function ictfax_load_fax($cid) {
  $result = db_query('SELECT * FROM fax_outbox WHERE cid = :cid', array(':cid'=>$cid));
  return $result->fetchObject();
} */

/**
 * Crates a input form
 */
function ictfax_form($form, &$form_state, $edit = array()) {
  $edit += array(
    'send_to'    => '',
    'send_from'     => '',
    'text'       => '',
    'file_name'      => '',
    'rating'       => 3,
  );
  
  // Include the CTools tools that we need.
  ctools_include('ajax');
  ctools_include('modal');
  // Add CTools' javascript to the page.
  ctools_modal_add_js();

  // If we're editing an existing fax, we'll add a value field to the form
  // containing the fax's unique ID.
  if (!empty($edit['cid'])) {
    $form['cid'] = array(
      '#type'        => 'value',
      '#value'       => $edit['cid'],
    );
  }

  $form['info'] = array(
    '#type'          => 'fieldset',
    '#title'         => t('Fax Information'),
  );
  
  $form['info']['send_to'] = array(
    '#type'          => 'textfield',
    '#title'         => t('Send To'),
    '#required'      => TRUE,
    '#size'          => 60, 
    '#maxlength'     => 128, 
    '#description' => t('Click \'Phonebook\' to select fax #. where to send fax'),
    '#default_value' => $edit['send_to'],
  );
  
  $form['info']['url'] = array(
    '#type' => 'hidden',
    // The name of the class is the #id of $form['ajax_button'] with "-url"
    // suffix.
    '#attributes' => array('class' => array('contact-button-url')),
    '#value' => url('ictfax/phonebookpopup'),    
  );
  
  $form['info']['ajax_button'] = array(
    '#type' => 'button',
    '#value' => 'Phonebook',
    '#attributes' => array('class' => array('ctools-use-modal')),
    '#id' => 'contact-button',
  );
  
  $form['info']['text'] = array(
    '#type'          => 'textarea',
    '#title'         => t('Message'),
    '#required'      => FALSE,
    '#cols'          => 60, 
    '#rows'          => 10,
    '#default_value' => $edit['text'],
  );
  
  // helper field for file upload
  $form['#attributes'] = array('enctype' => "multipart/form-data");
  $form['info']['file_name'] = array(
    '#type'          => 'file',
    '#title'         => t('Fax file'),
    '#required'      => FALSE,
    '#description'   => t('Select a file to send as fax, please use only tif, pdf, jpg, png, gif or txt file'),
  );
  
  $form['info']['rating'] = array(
    '#type'          => 'select',
    '#title'         => t('No. of Retries'),
    '#options'       => array(1=>1, 2=>2, 3=>3),
    '#description'   => t('No. of tries if call failed'),
    '#default_value' => $edit['rating'],
  );
 
  $form['submit'] = array(
    '#type'          => 'submit',
    '#value'         => t('Create new Fax'),
  );
  
  return $form;
  
}

/**
 * Performs validation.
 *
 */ 
 function ictfax_form_validate($form, &$form_state) {
  $fax = $form_state['values'];
  if (isset($fax['ictfax_outbox_id'])) {
    // we are editing an existing record
    $existing_record = $fax['ictfax_outbox_id'];
  }
  if ($fax['send_to'] == '') {
    form_set_error('send_to', t('Recipient cannot be empty'));
  }
  // etc

/*  if (empty($fax['send_from'])) {
    form_set_error('send_from', t('Account code is required.'));
  }*/
  if (empty($fax['send_to'])) {
    form_set_error('send_to', t('Fax Number is required.'));
  } else {
    if (!ctype_digit(str_replace(array('+', ','), '',$fax['send_to']))) {
        form_set_error('send_to', t('Fax Number is not valid.'));
    }
  }
  // Validate file
  $allowedTypes = array(
     1=>'odt',  2=>'ott',  3=>'sxw',  4=>'stw',  5=>'doc',  6=>'dot',  7=>'sdw',  8=>'vor',  9=>'htm', 10=>'sdd', 
    11=>'sdp', 12=>'wpd', 13=>'ods', 14=>'ots', 15=>'sxc', 16=>'stc', 17=>'xls', 18=>'xlw', 19=>'xlt', 20=>'sdc', 
    21=>'csv', 22=>'odp', 23=>'otp', 24=>'sxi', 25=>'sti', 26=>'ppt', 27=>'pps', 28=>'pot', 29=>'sxd', 30=>'odt', 
    31=>'ott', 32=>'sxw', 33=>'stw', 34=>'doc', 35=>'dot', 36=>'sdw', 37=>'vor', 38=>'htm', 39=>'sdd', 40=>'sdp', 
    41=>'wpd', 42=>'ods', 43=>'ots', 44=>'sxc', 45=>'stc', 46=>'xls', 47=>'xlw', 48=>'xlt', 49=>'sdc', 50=>'csv', 
    51=>'odp', 52=>'otp', 53=>'sxi', 54=>'sti', 55=>'ppt', 56=>'pps', 57=>'pot', 58=>'sxd', 59=>'txt', 60=>'tif', 
    61=>'jpg', 62=>'pdf', 63=>'png', 64=>'gif',
  );
  $validators = array('file_validate_extensions' => $allowedTypes);
  $file = file_save_upload('file_name', $validators);
  if ($file) {
       $form_state['values']['file_name'] = $file; // drupal file object
  }
  else{
       form_set_error('file_name', "File is required");
  }
}

 /**
 * Persist the changes to the database
 */
function ictfax_form_submit($form, &$form_state) {
  
  /****** add id of the user who creates this fax *******/

  global $user;
  $uid = $user->uid;

  $path = variable_get('fax_directory_outbox', '/usr/ictfax/sites/default/files/ictfax/webfax');
  file_prepare_directory($path, FILE_CREATE_DIRECTORY);

  $edit = $form_state['values'];
  
  //Set other database required fields
  $fax['send_to'] = $edit['send_to'];
  $fax['text'] = addcslashes($edit['text'],'$"\\');
  $fax['status'] = '0';
  $fax['status_string'] = 'in queue';
  $fax['file_name'] = $edit['file_name']->filename;
  $fax['file_type'] = '';
  $fax['pages'] = 0;
  $fax['uid'] = $uid;
  $fax['created'] = time();
  $fax['changed'] = time();
  $fax['rating'] = $edit['rating'];
  $fax['submitted_from'] = 'web';  
  
  if(!isset($fax['send_from'])) {
    $fax['send_from'] = variable_get('default_caller_id', '33184164306');
  }
  // get caller id
  $result = db_query("SELECT did FROM ictpbx_did JOIN ictpbx_user ON assigned_to = ictpbx_user_id WHERE uid = :uid", array(':uid'=>$uid));
  if($did = $result->fetchAssoc()) {
    $fax['send_from'] = $did['did'];
  }
  
  $allowedTypes = array(
     1=>'odt',  2=>'ott',  3=>'sxw',  4=>'stw',  5=>'doc',  6=>'dot',  7=>'sdw',  8=>'vor',  9=>'htm', 10=>'sdd', 
    11=>'sdp', 12=>'wpd', 13=>'ods', 14=>'ots', 15=>'sxc', 16=>'stc', 17=>'xls', 18=>'xlw', 19=>'xlt', 20=>'sdc', 
    21=>'csv', 22=>'odp', 23=>'otp', 24=>'sxi', 25=>'sti', 26=>'ppt', 27=>'pps', 28=>'pot', 29=>'sxd', 30=>'odt', 
    31=>'ott', 32=>'sxw', 33=>'stw', 34=>'doc', 35=>'dot', 36=>'sdw', 37=>'vor', 38=>'htm', 39=>'sdd', 40=>'sdp', 
    41=>'wpd', 42=>'ods', 43=>'ots', 44=>'sxc', 45=>'stc', 46=>'xls', 47=>'xlw', 48=>'xlt', 49=>'sdc', 50=>'csv', 
    51=>'odp', 52=>'otp', 53=>'sxi', 54=>'sti', 55=>'ppt', 56=>'pps', 57=>'pot', 58=>'sxd', 59=>'txt', 60=>'tif', 
    61=>'jpg', 62=>'pdf', 63=>'png', 64=>'gif',
  );
  
  if (isset($fax['cid'])) {
    drupal_write_record('fax_outbox', $fax, 'cid');
  }
  else {
    drupal_write_record('fax_outbox', $fax);
  }
  
  $sourceFile = '/tmp/'.$fax['file_name'];
  // set destination file path
  //$targetFile = "$path/$fax[cid].tif";
  //$cmd = "cp $sourceFile $targetFile";
  //exec($cmd);
  
  if (isset($fax['file_name']) && $fax['file_name'] != '') {
    $fileExten = strtolower(end(explode('.', $fax['file_name'])));
    echo exec("echo checking file extensions: $fileExten > /tmp/mytest.txt");
    if (in_array($fileExten, $allowedTypes)) {
      $fileName = $sourceFile;
      echo exec("echo file:$fileName >> /tmp/mytest.txt");
      if ($fileExten == 'tif') {
        echo exec("echo tif file >> /tmp/mytest.txt");
        $pdfFilePath = str_replace('.tif', '.pdf', $fileName);
        $cmd = ictfax_which('tiff2pdf', '/usr/bin') . " -o $pdfFilePath -z $fileName";
        exec($cmd);
        $cmd = "rm -rf $fileName";
        // existing tiff file must be deleted before new tiff file creation
        exec($cmd);
      } elseif ($fileExten == 'txt') {
        echo exec("echo txt file >> /tmp/mytest.txt");
        $psFilePath = str_replace('.txt', '.ps', $fileName);
        $pdfFilePath = str_replace('.ps', '.pdf', $psFilePath);
        $cmd = ictfax_which('uniprint', '/usr/local/bin') . " -hsize 0 -size 9 -in $fileName -out $psFilePath";
        exec($cmd);
        $cmd = "rm -rf $fileName";
        $cmd = ictfax_which('ps2pdf', '/usr/bin') . " $psFilePath $pdfFilePath";
        exec($cmd);
        $cmd = "rm -rf $psFilePath";
      } elseif ($fileExten == 'jpg') {
        echo exec("echo jpg file >> /tmp/mytest.txt");
        $pdfFilePath = str_replace('.jpg', '.pdf', $fileName);
        $cmd = ictfax_which('convert', '/usr/bin') . " $fileName -type Bilevel -monochrome $pdfFilePath";
        exec($cmd);
        $cmd = "rm -rf $fileName";
      } elseif ($fileExten == 'png') {
        echo exec("echo png file >> /tmp/mytest.txt");
        $pdfFilePath = str_replace('.png', '.pdf', $fileName);
        $cmd = ictfax_which('convert', '/usr/bin') . " $fileName -type Bilevel -monochrome $pdfFilePath";
        exec($cmd);
        $cmd = "rm -rf $fileName";
      } elseif ($fileExten == 'gif') {
        echo exec("echo gif file >> /tmp/mytest.txt");
        $pdfFilePath = str_replace('.gif', '.pdf', $fileName);
        $cmd = ictfax_which('convert', '/usr/bin') . " $fileName -type Bilevel -monochrome $pdfFilePath";
        exec($cmd);
        $cmd = "rm -rf $fileName";
      } elseif ($fileExten == 'pdf') {
        echo exec("echo pdf file >> /tmp/mytest.txt");
        $pdfFilePath = $fileName;
      } elseif (in_array($fileExten, $allowedTypes)) {
        echo exec("echo any other file >> /tmp/mytest.txt");
        $pdfFilePath = str_replace($allowedTypes, 'pdf', $fileName);
        $cmd = ictfax_which('makepdf.sh', '/usr/ictfax/sites/all/modules/ictpbx/ictfax') . " $fileName";
        exec($cmd);
        $cmd = "rm -rf $fileName";
        exec($cmd); 
      } 
      // get total page count of pdf
      $cmd = ictfax_which('pdfinfo', '/usr/bin') . " '$pdfFilePath' | sed -n 's#^Pages:[^0-9]*\\([0-9.]*\)$#\\1#p'";
      exec($cmd, $pages);
      echo exec("echo '".print_r($pages, true)."' >> /tmp/mytest.txt");
  
      $fileNameTiff = str_replace('.pdf', '.tif', $pdfFilePath);
      $cmd = ictfax_which('gs', '/usr/bin') . " -dBATCH -dNOPAUSE -sDEVICE=tiffg4 -sPAPERSIZE=a4 -r204x98 -dAutoRotatePages -sOutputFile=$fileNameTiff $pdfFilePath";
      exec($cmd);
      $cmd = "chmod -R 777 $path";
      exec($cmd);
      
      echo exec("echo converting back to tif: $fileNameTiff, $pdfFilePath >> /tmp/mytest.txt");
      $targetTifFile = "$path/$fax[cid].tif";
      $cmd = "cp $fileNameTiff $targetTifFile";
      exec($cmd);


      if (!$pages[0] || $pages[0] < 1) {
        drupal_set_message(t('unknow error occured while processing file.'), 'error');
      }
      //$aFile[$curFile['name']]['file_name'] = $curFile['name'];
      //$aFile[$curFile['name']]['file_path'] = $fileNameTiff;
      //$aFile[$curFile['name']]['file_type'] = substr($fileExten, -3);
      $fax['file_path'] = $fileNameTiff;
    }
  } 
  /////////////////////////////////////////
  // Perform balance check before dialing//
  /////////////////////////////////////////
  $cmd = "rm -rf $pdfFilePath";
  exec($cmd);
  $fax['pages'] = $pages[0];
  //echo exec("echo '".print_r($fax['pages'], true)."' >> /tmp/mytest.txt");
  
  if ($fax['pages'] > 0) {
    $status = module_invoke_all('check_balance', $fax);
    if(is_array($status) && isset($status[0])) {
      $status = $status[0];
    } else {
      $status = TRUE; // set to TRUE to send fax without billing
    }
    echo exec("echo 'remaining-balance-status=".print_r($status, true)."' >> /tmp/mytest.txt");
    if($status) {
      drupal_write_record('fax_outbox', $fax, 'cid');
      ictfax_sendfax($uid, $fax);
    } else {
      drupal_set_message(t('Insufficient balance!'), 'error');
    }
  } else {
    drupal_set_message(t('No pages or error opening file!'), 'error');
  }
  //clear file entry in file_managed
  $uri = $edit['file_name']->uri;
  $query = "DELETE FROM {file_managed} WHERE uri = '$uri'";
  db_query($query);
  
  $form_state['redirect'] = 'ictfax/outbox';

}

/**
 * Deletes a recording, given its unique ID.
 *
 * @param $recording
 *   An array of recording containing the ID of a recording
 */
function ictfax_delete($fax) {
  $sql = 'DELETE FROM {fax_outbox} WHERE cid = :cid';
  if(db_query($sql, array(':cid'=>$fax['cid']))) {
    $path = variable_get('fax_directory_outbox', '/usr/ictfax/sites/default/files/ictfax/webfax');
    $filepath = "$path/$fax[cid].tif";
    exec("rm -rf '$filepath'");
    drupal_set_message(t('Fax deleted successfully!'), 'status');
  } else {
    drupal_set_message(t('Cannot delete specified fax! or you have not proper permissions!'), 'error');
  }
  drupal_goto('ictfax/outbox');
}

/* 
function ictfax_save_fax($fax, $edit, $faxFiles) {
  $oOfficeTypes = array('.odt', '.ott', '.sxw', '.stw', '.doc', '.dot', '.sdw', '.vor', 
            '.htm', '.sdd', '.sdp', '.wpd', '.ods', '.ots', '.sxc', '.stc', 
            '.xls', '.xlw', '.xlt', '.sdc', '.csv', '.odp', '.otp', '.sxi', 
            '.sti', '.ppt', '.pps', '.pot', '.sxd');

  $allTypes     = array('.odt', '.ott', '.sxw', '.stw', '.doc', '.dot', '.sdw', '.vor', 
            '.htm', '.sdd', '.sdp', '.wpd', '.ods', '.ots', '.sxc', '.stc', 
            '.xls', '.xlw', '.xlt', '.sdc', '.csv', '.odp', '.otp', '.sxi', 
            '.sti', '.ppt', '.pps', '.pot', '.sxd', '.txt', '.tif', '.jpg', 
            '.pdf');

  //$fields = array_keys(ictfax_get_fields());

  $noFILES    = 0;
  $validFILES = 0;
  foreach ($faxFiles as $key => $value) {
      $fileExten = strtolower(substr($value['name'], -4));
      if ($value['error'] == '0') {
          $noFILES = $noFILES + 1;
          if (in_array($fileExten, $allTypes)) {
            $validFILES = $validFILES + 1;
          }
      }
  }

  if (!$uid) {
    form_set_error('password',t('Invalid account credential.'));
  }
  
  if (empty($edit['send_from'])) {
    $allAccounts = ictfax_getaccount();
    $edit['send_from'] = array_shift($allAccounts);
    if (empty($edit['send_from'])) {
        form_set_error('send_from', t('Account code is required.'));
    }
  }

  if (empty($edit['send_to'])) {
    form_set_error('send_to', t('Fax Number is required.'));
  } else {
    if (!ctype_digit(str_replace(array('+', ','), '',$edit['send_to']))) {
        form_set_error('send_to', t('Fax Number is not valid.'));
    }
  }

  // if no attachment
  if ($noFILES > 0 && $validFILES <= 0) {
    form_set_error('file_name', t('attached file type not supported.'));
  } elseif ($noFILES <= 0 && strlen($edit['text']) <= 0) {
    form_set_error('text', t('no file and no message. can not send empty fax'));
  }

  //escape special charecter to avoide risk in command line
  $edit['text'] = addcslashes($edit['text'],'$"\\');

  if ( !form_get_errors() ) {
    // Test if the fax is new or already exists
    if ($fax->cid) {
    } else {
      // Insert fax

      $edit['status'] = '0';
      $edit['status_string'] = 'in queue';
      $edit['file_name'] = '';
      $edit['file_path'] = '';
      $edit['file_type'] = '';
      $edit['pages'] = 0;
      $edit['ictfax_outbox_id'] = db_next_id('ictfax_outbox_id');
      $edit['uid'] = $uid;
      $edit['created'] = time();
      $edit['changed'] = time();
      //Fileds listed below commited out cos already contain a value
      //$edit['send_to'] = $edit['send_to'];
      //$edit['rating'] = $edit['rating'];
      //$edit['submitted_from'] = $edit['submitted_from'];

      $recordDir = '/var/spool/asterisk/fax/outbox/' . $edit['ictfax_outbox_id'] . '/';
      $cmd = "mkdir -p -m 777 $recordDir";
      exec($cmd);

      $aFiles = array();

      if ($noFILES <= 0) {
        $tmpFile = array();
        $tmpFile['tmp_name'] = $recordDir . 'temp.txt';
        $cmd = 'echo "'.$edit['text'].'" > '.$tmpFile['tmp_name']; 
        exec($cmd);
        $tmpFile['name'] = 'input.txt';
        $tmpFile['error'] = '0';
        $tmpFile['size'] = 999;
        $faxFiles['input.txt'] = $tmpFile;

        if ($edit['submitted_from'] != 'web') {
          $edit['text'] = $edit['subject'];        
        } else {
          $edit['text'] = truncate_utf8($edit['text'], 30, TRUE, TRUE);
        }
      } else {
        if ($edit['submitted_from'] != 'web') {
          $edit['text'] = $edit['subject'];        
        } else {
          $edit['text'] =  truncate_utf8($edit['text'], 30, TRUE, TRUE);
        }
      }

      //clean up the header. so it will be safe in asterisk dialplan
      $edit['text'] = str_replace(array("\n", "\r", '#', '$', '[', ']', '{', '}', '|', ','), ' ', $edit['text']);
      if ($edit['text']=='') {
        $edit['text'] = 'no subject';
      }

      foreach ($faxFiles as $key => $curFile) {

        $fileExten = strtolower(substr($curFile['name'], -4));

        if ($curFile['error'] == '0' && in_array($fileExten, $allTypes)) {
          $sourceFile = $curFile['tmp_name'];
          $targetFile = $recordDir . $curFile['name'];
          $cmd = "mv $sourceFile $targetFile";
          exec($cmd);
          $fileName = $recordDir . $curFile['name'];

          if ($fileExten == '.tif') {
            $pdfFilePath = str_replace('.tif', '.pdf', $fileName);
            $cmd = ictfax_which('tiff2pdf', '/usr/bin') . " -o $pdfFilePath -z $fileName";
            exec($cmd);
            $cmd = "rm -rf $fileName";
            // existing tiff file must be deleted before new tiff file creation
            exec($cmd);
          } elseif ($fileExten == '.txt') {
            $psFilePath = str_replace('.txt', '.ps', $fileName);
            $pdfFilePath = str_replace('.ps', '.pdf', $psFilePath);
            $cmd = ictfax_which('uniprint', '/usr/local/bin') . " -hsize 0 -size 9 -in $fileName -out $psFilePath";
            exec($cmd);
            $cmd = "rm -rf $fileName";
            //exec($cmd);
            $cmd = ictfax_which('ps2pdf', '/usr/bin') . " $psFilePath $pdfFilePath";
            exec($cmd);
            $cmd = "rm -rf $psFilePath";
            //exec($cmd);
          } elseif (in_array($fileExten,$oOfficeTypes)) {
            $pdfFilePath = str_replace($oOfficeTypes, '.pdf', $fileName);
            $cmd = ictfax_which('makepdf.sh', '/usr/ictfax/wwwroot/modules/email2fax') . " $fileName";
            exec($cmd);
            $cmd = "rm -rf $fileName";
            //exec($cmd);
          } elseif ($fileExten == '.jpg') {
            $pdfFilePath = str_replace('.jpg', '.pdf', $fileName);
            $cmd = ictfax_which('convert', '/usr/bin') . " $fileName -type Bilevel -monochrome $pdfFilePath";
            exec($cmd);
            //$pdfFilePath = str_replace(array('.tiff', '.tif'), '.pdf', $tifFilePath);
            //$cmd = "tiff2pdf -o $pdfFilePath -z $tifFilePath";
            //exec($cmd);
            $cmd = "rm -rf $fileName";
            //exec($cmd);
          } elseif ($fileExten == '.pdf') {
            $pdfFilePath = $fileName;
          }
          // get total page count of pdf
          $cmd = ictfax_which('pdfinfo', '/usr/bin') . " '$pdfFilePath' | sed -n 's#^Pages:[^0-9]*\\([0-9.]*\)$#\\1#p'";
          exec($cmd, $edit['pages']);

          $fileNameTiff = str_replace('.pdf', '.tif', $pdfFilePath);
          //$cmd = "convert -quiet -density 150 $fileName -shave 65x65 -colorspace rgb -quality 100 -resample 320 $fileName.tif";
          //$cmd = "cat $fileName | gs -q -sDEVICE=tiffg3 -sPAPERSIZE=a4 -r204x196 -dNOPAUSE -sOutputFile=$fileName.tif";
          $cmd = ictfax_which('gs', '/usr/bin') . " -dBATCH -dNOPAUSE -sDEVICE=tiffg4 -sPAPERSIZE=a4 -r204x98 -dAutoRotatePages -sOutputFile=$fileNameTiff $pdfFilePath";
          exec($cmd);
          $cmd = "chmod -R 777 $recordDir";
          exec($cmd);

          if (!$edit['pages'] || $edit['pages'] < 1) {
            form_set_error('file_name', t('unknow error occured while processing file.'));
          }

          $aFile[$curFile['name']]['file_name'] = $curFile['name'];
          $aFile[$curFile['name']]['file_path'] = $fileNameTiff;
          $aFile[$curFile['name']]['file_type'] = substr($fileExten, -3);
        }
      }

      $aSendTo = explode(',',$edit['send_to']);
      array_walk($aSendTo,'ictfax_getPhoneNo');

      $aCid = array();
      $entryNo=0;
      foreach ($aFile as $key => $cFile) {
        $edit['file_name'] = $cFile['file_name'];
        $edit['file_path'] = $cFile['file_path'];
        $edit['file_type'] = $cFile['file_type'];

        foreach ($aSendTo as $key => $value) {
          $edit['send_to'] = $value;

          if ($entryNo != 0) {
            $edit['ictfax_outbox_id'] = db_next_id('ictfax_outbox_id');
          }

          $columns = array();
          $params = array();
          $types = array();

          foreach ($edit as $key => $value) {
            if (in_array($key, $fields)) {
              $columns[] = $key;
              $params[] = $value;
              $types[] = "'%s'";
            }
          }

          $sql = 'INSERT INTO ictfax_outbox ('. implode(', ', $columns) .') VALUES ('. implode(', ', $types) .')';
          db_query($sql, $params);
          //db_query("UPDATE ictfax_outbox SET send_from = %d WHERE ictfax_outbox_id = %d", $edit['send_from'], $edit['ictfax_outbox_id']);
          if ($edit['pages'] == 0) {
            db_query("UPDATE ictfax_outbox SET status = 150, status_string = 'invalid file' WHERE ictfax_outbox_id = :ictfax_outbox_id", array(':ictfax_outbox_id'=>$edit['ictfax_outbox_id']));
          } else {
            ictfax_sendfax($uid, $edit);
          }

          $aCid[] = $edit['ictfax_outbox_id'];
          $entryNo++;
        }
      }
      $_SESSION['fax_cid'] = $aCid;
    }
  }
} */

function ictfax_getaccount() {
  global $user;
  $result = db_query("SELECT * FROM astaccount WHERE uid = :uid", array(':uid'=>$user->uid));
  $rows = array();
  while ($account = $result->fetchAssoc()) {
    $row_id = $account['accountcode'];
    $rows[$row_id] = check_plain($account['accountname']);
  }
  if (!isset($rows)) {
    return FALSE;
  }
  return $rows;
  
}

function ictfax_array_push(&$array,$object,$key=null){
   $keys = array_keys($array);
   rsort($keys);
   $newkey = ($key==null)?$keys[0]+1:$key;
   $array[$newkey] = $object;
   return $newkey;
}


function ictfax_sendfax($uid, $fax) {

  $sendFrom = $fax['send_from'];
  //$sendTo = ltrim($fax['send_to'], '00');
  $sendTo = $fax['send_to'];
  $tiffFile = $fax['file_path'];
  $recordId = $fax['cid'];
  $description = $fax['text'];
  $retries = $fax['rating'];
  
  //Create dial string
  $trunk = get_trunk_active();
  // select first active trunk
  if(isset($trunk['name']) && $trunk['name'] != NULL) {
    $dial_string = "sofia/gateway/$trunk[name]/";
    echo exec("echo active trunk selected >> /tmp/mytest.txt");
  } else {
  // set default trunk
    $dial_string = "user/";
    echo exec("echo default trunk selected >> /tmp/mytest.txt");
  }
  if($trunk['prefix'] != NULL) {
    $dial_string = $dial_string . $trunk['prefix'];
  }
  echo exec("echo trunk=$dial_string >> /tmp/mytest.txt");
  // Call Dial settings for plivo
  $application_root = variable_get('ictfax_drupal_root', 'http://127.0.0.1/ictfax/index.php');
  $plivo_server     = variable_get('ictfax_plivo_server', '127.0.0.1');
  $plivo_port       = variable_get('ictfax_plivo_port', '8088');
  $plivo_AccountSid = variable_get('ictfax_plivo_accountid', 'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX');
  $plivo_AuthToken  = variable_get('ictfax_plivo_authenticationtoken', 'YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY');
  $REST_API_URL = "http://$plivo_server:$plivo_port";
  $ApiVersion = 'v0.1';
  $extra_dial_string = "bridge_early_media=true,hangup_after_bridge=false";

  $client = new PlivoRestClient($REST_API_URL, $plivo_AccountSid, $plivo_AuthToken, $ApiVersion);
  $call_params = array(
      'From' => $sendFrom, # Caller Id
      'To' => $sendTo, # User Number to Call
      //'Gateways' => "sofia/gateway/mycomtn-outbound/00", 
      'Gateways' => $dial_string, # Gateway string to try dialing our separated by comma. First in list will be tried first
      'GatewayCodecs' => "'PCMA,PCMU'", # Codec string as needed by FS for each gateway separated by comma
      'GatewayTimeouts' => "60",      # Seconds to timeout in string for each gateway separated by comma
      'GatewayRetries' => "1", # Retry String for Gateways separated by comma, on how many times each gateway should be retried
//      'ExtraDialString' => $extra_dial_string,
      'AnswerUrl' => "$application_root?q=ictfax/send_fax/$fax[cid]",
      'HangupUrl' => "$application_root?q=ictfax/send_fax_hangup/$fax[cid]",
      'RingUrl' => "$application_root/ringing/"    
  );
  try {
      $response = $client->call($call_params);
      watchdog("Plivo", "Success: Call sent to $sendTo" , array(), WATCHDOG_INFO);
      watchdog("Plivo", "rec_id: $fax[cid]" , array(), WATCHDOG_INFO);
      drupal_set_message(t('Fax sent successfully!'), 'status');
  } catch (Exception $e) {
      watchdog("Plivo", "Error trace: " .$e , array(), WATCHDOG_ERROR);
      drupal_set_message(t('Unable to connect to Plivo/Freeswitch!'), 'error');
      return FALSE;
  }//end try-catch
  return TRUE;
}

// Send Fax through Plivo
function ictfax_send_fax($cid) {
  $fax = db_query("SELECT * FROM fax_outbox WHERE cid=:cid", array(':cid'=>$cid))->fetchAssoc();
  
  // billing and cdr
  $estimated_cost = module_invoke_all('reserve_balance', $fax);
  if(is_array($estimated_cost) && isset($estimated_cost[0])) {
    $estimated_cost = $estimated_cost[0];
  }
  module_invoke_all('write_cdr', $fax, $estimated_cost);
  
  // Prepare fax to send
  echo exec("echo '".print_r($_REQUEST, true)."' >> /tmp/mytest.txt");
  watchdog("Send Fax", "cid: $cid" , array(), WATCHDOG_INFO);
  $path = variable_get('fax_directory_outbox', '/usr/ictfax/sites/default/files/ictfax/webfax');
  $filepath = "$path/$cid.tif";
  // Update fax status 'in queue' to 'sent'
  $sql    = "SELECT * FROM {fax_outbox} WHERE cid = :cid";
  $fax = db_query($sql, array(':cid' => $cid))->fetchAssoc();
  $fax['status_string'] = 'sent';
  drupal_write_record('fax_outbox', $fax, 'cid');
  $response = '<?xml version="1.0" encoding="UTF-8"?>
          <Response>
          <SendFax>'.$filepath.'</SendFax>
          <Hangup />
          </Response>';
  echo $response;
}

/**
*
* Performs post fax send actions
*
*/
function ictfax_send_fax_hangup($fax_id) {
  $fax = db_query("SELECT * FROM fax_outbox WHERE cid=:cid", array(':cid'=>$fax_id))->fetchAssoc();
  $user = db_query("SELECT * FROM ictpbx_user WHERE uid=:uid", array(':uid'=>$fax['uid']))->fetchAssoc();
  module_invoke_all('outgoing_billing', $fax);  
  
  echo exec("echo submitted_from=$fax[submitted_from] >> /tmp/mytest.txt");
  // Send success email report if submitted from email
  if($fax['submitted_from']=='email') {
    $emailData['submitted_from']= $user['mail'];
    $emailData['send_to']      = $fax['send_to'];
    $emailData['subject']      = '';
    $emailData['pages']        = $fax['pages'];
    echo exec("echo sending email >> /tmp/mytest.txt");
    ictfax_sendmail_success($user['name'], $emailData);
  }
}

// Receive Fax through Plivo
function ictfax_receive_fax() {
  global $user;
  echo exec("echo $_REQUEST[To] > /tmp/mytest.txt");
  $to = $_REQUEST['To'];
  // Get whether DID called has been assigned to a user
  $sql    = "SELECT * FROM {ictpbx_did} WHERE did = :ictpbx_did_id";
  $did = db_query($sql, array(':ictpbx_did_id' => $to))->fetchAssoc();
  echo exec("echo ictpbx_id $did[assigned_to] >> /tmp/mytest.txt");

  if ($did['assigned_to'] != null && $did['forwarded_to'] != null) {
    echo exec("echo if condition success $did[forwarded_to] >> /tmp/mytest.txt");
    // Get the uid of the called user
    $sql    = "SELECT * FROM {ictpbx_user} WHERE ictpbx_user_id = :ictpbx_user_id";
    $ictpbx_user = db_query($sql, array(':ictpbx_user_id' => $did['assigned_to']))->fetchAssoc();
    // Now check available credit for this user
    if(module_exists('ictpbx_billing')) {
      if(($ictpbx_user['free_bundle'] - $ictpbx_user['reserve_free_bundle']) > 0) {
        echo exec("echo Not enough credits to receive fax. Exiting! >> /tmp/mytest.txt");
        exit();
      }
    }
    // reserve fax credit
    $ictpbx_user['reserve_free_bundle'] = $ictpbx_user['reserve_free_bundle'] + 1;
    drupal_write_record('ictpbx_user', $ictpbx_user, 'ictpbx_user_id');
    
    $inbox['send_to'] = $to;
    $inbox['send_from'] = $_REQUEST['From'];
    $inbox['status_string'] = 'receiving';
    $inbox['pages'] = 0;
    $inbox['created'] = time();
    $inbox['uid'] = $ictpbx_user['uid'];
    $inbox['call_uuid'] = $_REQUEST['CallUUID'];
    drupal_write_record('fax_inbox', $inbox);
    
    $path = variable_get('fax_directory_inbox', '/usr/ictfax/sites/default/files/ictfax/inbox');
    file_prepare_directory($path, FILE_CREATE_DIRECTORY);
    $file_path = "$path/$inbox[fax_inbox_id].tif";

    echo exec("echo $file_path >> /tmp/mytest.txt");

    $application_root = variable_get('ictfax_drupal_root', 'http://127.0.0.1/ictfax/index.php');
    $send_email = "ictfax/send_email/$inbox[fax_inbox_id]";
    $url_action = "$application_root?q=$send_email";
    $response = '<?xml version="1.0" encoding="UTF-8"?>
        <Response>
        <ReceiveFax>'.$file_path.'</ReceiveFax>
        <Redirect>'.$url_action.'</Redirect>
        </Response>';
    echo $response;
    echo exec("echo after fax application run >> /tmp/mytest.txt");  
  } else {
    $response = '<?xml version="1.0" encoding="UTF-8"?>
        <Response>
        <Hangup />
        </Response>';
    echo $response;
  }
}
// After receiving a fax, send an email to user
function ictfax_send_email($fax_id) {
    echo exec("echo ictfax_send_email called >> /tmp/mytest.txt");
    $path = variable_get('fax_directory_inbox', '/usr/ictfax/sites/default/files/ictfax/inbox');
    $tifFile = "$path/$fax_id.tif";
    // convert tiff to pdf
    $pdfFilePath = str_replace('.tif', '.pdf', $tifFile);
    $cmd = ictfax_which('tiff2pdf', '/usr/bin') . " -o $pdfFilePath -z $tifFile";
    exec($cmd);
    //$cmd = "rm -rf $tifFile";
    //exec($cmd);
    // get total page count of pdf
    $cmd = ictfax_which('pdfinfo', '/usr/bin') . " '$pdfFilePath' | sed -n 's#^Pages:[^0-9]*\\([0-9.]*\)$#\\1#p'";
    exec($cmd, $pages);
    echo exec("echo 'Pages=".print_r($pages, true)."' >> /tmp/mytest.txt"); 

    // load inbox fax
    $sql    = "SELECT * FROM {fax_inbox} WHERE fax_inbox_id = :fax_inbox_id";
    $fax = db_query($sql, array(':fax_inbox_id' => $fax_id))->fetchAssoc();
    // update fax status
    $fax['status_string'] = 'received';
    $fax['pages'] = $pages[0];
    drupal_write_record('fax_inbox', $fax, 'fax_inbox_id');
    
    // get user name
    $sql    = "SELECT name FROM {ictpbx_user} WHERE uid = :uid";
    $user = db_query($sql, array(':uid' => $fax['uid']))->fetchAssoc();
    // get email to forward
    $sql    = "SELECT forwarded_to FROM {ictpbx_did} WHERE did = :did";
    $did = db_query($sql, array(':did' => $fax['send_to']))->fetchAssoc();
    
    // Send email now
    $fax['file_path'] = "$path/$fax[fax_inbox_id].pdf";
    $fax['mail_to'] = $did['forwarded_to'];
    
    echo exec("echo fax_id=$fax_id >> /tmp/mytest.txt"); 
    echo exec("echo did=$fax[send_to] >> /tmp/mytest.txt"); 
    echo exec("echo user_name=$user[name] >> /tmp/mytest.txt"); 
    echo exec("echo mail_to=$fax[mail_to] >> /tmp/mytest.txt"); 

    ictfax_sendmail_received($user['name'], $fax);
    
    // responed to plivo server
    $response = '<?xml version="1.0" encoding="UTF-8"?>
    <Response>
      <Hangup />
    </Response>';
    echo $response;
} 

function ictfax_getPhoneNo($item, $key)
{
    $item = str_replace(array('-','_',' '),'',$item);
}

function ictfax_onload() {
  if (isset($_SESSION['fax_status']) && $_SESSION['fax_status'] == 'in_queue') {
      return array('setTimer()');   
  }
} 


function ictfax_getJaveScript() {
   $myjava = '
<script language="JavaScript">
var msgIX = 0
   
function setTimer() {
    window.setInterval("displayMessage()", 3000)
}

function displayMessage() {
  try {
    p = new XMLHttpRequest();
  } catch (e) {
    p = new ActiveXObject("Msxml2.XMLHTTP");
  }
  var interactiveCount = 0;
  // p.onload would also work in Mozilla
  p.onreadystatechange = FaxStatus;
  try {
    // Needed for Mozilla if local file tries to access an http URL
    netscape.security.PrivilegeManager.enablePrivilege("UniversalBrowserRead");
  } catch (e) {
    // ignore
  }
  postq = "q=ictfax/getfaxstatus&tt=" + Math.random();
  p.open("GET", "?" + postq);
  p.send(postq);
}

function FaxStatus()
{
  if (p.readyState != 4)
    return;
  var myresp = p.responseText;
  var myresp_line=myresp.split("\n");
  var myresp_array=myresp_line[0].split("|");
    var loop_ct = 1;

  document.getElementById("faxstatus").innerHTML = p.responseText;
}

</script>
';
    return $myjava;
}

function ictfax_getfaxstatus() {
    global $user;
    $aCid = $_SESSION['fax_cid'];
    $output = '';
    foreach ($aCid as $key => $cid) {
        $faxQuery = db_query("SELECT send_to, status, status_string FROM ictfax_outbox WHERE ictfax_outbox_id = :cid AND uid = :uid", array(':cid'=> $cid, ':uid'=>$user->uid));
        $fax = $faxQuery->fetchObject();
        if ($fax->status > 100) {
            $color = "ff0000";
        } elseif ($fax->status == 20) {
            $color = "00ff00";
        } else {
            $color = "0000ff";
        }
        if ($output == '') {
            $output = '<font color="#000">Sending FAX to '.$fax->send_to.' stutus is:&nbsp;</font><font color="#'.$color.'">'.$fax->status_string.'</font>';
        } else {
            $output .= '<br /><font color="#000">Sending FAX to '.$fax->send_to.' stutus is:&nbsp;</font><font color="#'.$color.'">'.$fax->status_string.'</font>';
        }
    }
    return $output;
}



//Email Part
/*
function ictfax_mailhandler($node, $result, $i, $header, $mailbox) {

    if ($node->type != 'fax') {
        return $node;
    }

    if (!$node->subject) $node->subject = $node->title;

    $node->attachments = array();
    if (file_exists('modules/email2fax/mailsave.module')) {
        include_once 'modules/email2fax/mailsave.module';
        $node = mailsave_disabled_mailhandler($node, $result, $i, $header, $mailbox);
    }

    $attachments = array();
    foreach ($node->attachments as $key => $value) {
        $attachments[$key] = array();

        $attachments[$key]['tmp_name'] = $value['filepath'];
        $attachments[$key]['name']     = $value['filename'];
        $attachments[$key]['size']     = $value['filesize'];
        $attachments[$key]['error']    = 0;
    }

    global $user, $_SESSION, $GLOBALS;
    
    // gets the specified fax
    $fax  = ictfax_load_fax(0);
    $emailData = object2array($fax);

    $from = $header->from;
    $emailTo = explode('@', $header->toaddress);

    $emailData['submitted_from']= $from[0]->mailbox ."@". $from[0]->host;
    $emailData['send_to']      = str_replace(array(' ', '-', '"', "'", '+', '<', '>'), array(), $emailTo[0]);
    $emailData['subject']      = $node->subject;
    $emailData['text']         = $node->body;
    $emailData['send_from']    = $node->account;
    $emailData['rating']       = 3 - $node->try;

    //  _fax_dir_edit_validate($edit);
    ictfax_save_fax($fax, $emailData, $attachments, $user->uid);
    if (!form_get_errors()) {
      drupal_set_message(t('<div name="faxstatus" id="faxstatus" class="message status">The new fax has added to queue.</div>'));
      //$_SESSION['fax_status'] = 'in_queue';
    } else {
      $user->mail = $from[0]->mailbox ."@". $from[0]->host;
      ictfax_sendmail_error($user, $emailData, form_get_errors());
    }

    // clean variables
    $_SESSION['fax_status'] = '';
    $GLOBALS['form']        = array();

    return false;
} */

function ictfax_sendmail_received($user, $fax) {
    echo exec("echo Executing ictfax_sendmail_received >> /tmp/mytest.txt"); 
    $company_name  = variable_get('site_name', 'ICTFAX');
    $company_email = variable_get('site_mail', 'noreply@ictfax.org');
    $fax_did       = $fax['send_to'];
    $caller_id     = $fax['send_from'];
    $fax_pages     = $fax['pages'];
    $fax_date      = date('Y-m-d H:i:s', $fax['created']);
    //$fax['file_path'] = '/usr/ictfax/sites/default/files/logo.gif'; // Remove: for testing only

    $attachment = chunk_split(base64_encode(file_get_contents($fax['file_path'])));

    // prepare to send an email
    $random_hash = md5(uniqid(time()));
    $subject = "You have received a fax from $caller_id";

    ob_start();
    include(dirname(__FILE__).'/fax_email.txt.php');
    $txt_message = ob_get_clean();

    ob_start();
    include(dirname(__FILE__).'/fax_email.tpl.php');
    $html_message = ob_get_clean();

    if (!(variable_get('smtp_library', '') && file_exists(variable_get('smtp_library', '')))) {
      include_once variable_get('smtp_library', '');
      echo exec("echo SMTP library success >> /tmp/mytest.txt"); 
      $header  = "From: $company_name <$company_email>\n";
      $header .= "Reply-To: $company_email\n";

      $attachment = array(
        'name' => 'fax.pdf',
        'path' => $fax['file_path'],
        'type' => 'application/pdf'
      );

      $mail_success = user_mail_wrapper($fax['mail_to'], $subject, $html_message, $header, array($attachment), $txt_message);
    
    } else { 

      $header  = "From: $company_name <$company_email>\r\n";
      $header .= "Reply-To: $company_email\r\n";
      $header .= "MIME-Version: 1.0\r\n";
      $header .= "Content-Type: multipart/mixed; boundary=\"mixed$random_hash\"\r\n\r\n";
      $header .= "This is a multi-part message in MIME format.\r\n";
      $header .= "--mixed$random_hash\r\n";

      $header .= "Content-Type: multipart/alternative; boundary=\"alt$random_hash\"\r\n\r\n";
      $header .= "--alt$random_hash\r\n";
      $header .= "Content-type:text/plain; charset=iso-8859-1\r\n";
      $header .= "Content-Transfer-Encoding: 7bit\r\n\r\n";
      $header .= $txt_message."\r\n\r\n";
      $header .= "--alt$random_hash\r\n";
      $header .= "Content-type:text/html; charset=iso-8859-1\r\n";
      $header .= "Content-Transfer-Encoding: 7bit\r\n\r\n";
      $header .= $html_message."\r\n\r\n";
      $header .= "--alt$random_hash--\r\n\r\n";

      $header .= "--mixed$random_hash\r\n";
      $header .= "Content-Type: application/pdf; name=\"fax.pdf\"\r\n";
      $header .= "Content-Transfer-Encoding: base64\r\n";
      $header .= "Content-Disposition: attachment; filename=\"fax.pdf\"\r\n\r\n";
      $header .= $attachment."\r\n\r\n";
      $header .= "--mixed$random_hash--";
  
      $mail_success = mail($fax['mail_to'], $subject, '', $header);
      echo exec("echo Executing simple mail function >> /tmp/mytest.txt"); 
    }

    if (!$mail_success) {
      watchdog('ictfax', t('Error mailing to %name at %email.', array('%name' => theme('placeholder', $user->name), '%email' => theme('placeholder', $fax['mail_to']))), WATCHDOG_ERROR);
    }
}

/**
 * Sends out the email.
 *
 * @param $to
 *   string email address to send to.
 * @param $subject
 *   string subject of email.
 * @param $message
 *   string body of message.
 * @param $header
 *   string of header lines seperated by "\n".
 */
function user_mail_wrapper($to, $subject, $message, $header, $attachments = false, $alt_message = '') {
	$mail = new phpmailer(); //Create a new phpmailer object.

	//Set the correct protocol prefix to append to the smtp host.
	switch(variable_get('smtp_protocol', 'standard')){
	  case "ssl":
	    $mail->Protocol = 'ssl://';
	    break;
	  case "tls":
	    $mail->Protocol = 'tls://';
	    break;
	  case "standard":
	    $mail->Protocol = '';
	}

	$username = variable_get('smtp_username', '');
	$password = variable_get('smtp_password', '');
	//Figure out what name the email should be from.
	if (variable_get('smtp_fromname', '') != '') {
	  $from_name = variable_get('smtp_fromname', '');
	} else {
	  $from_name = variable_get('site_name', 'Drupal powered site');
	}
	//Decide whether to use SMTP Authorization. Do so if username and password are given.
	if ($username != '' and $password != '') {
	  $auth = TRUE;
	} else {
	  $auth = FALSE;
	}
	//Deal with the headers and extract the From address.
	$header_array = explode("\n", $header); //Adds each line of the header as an array element.
	foreach ($header_array as $header_line) {
	  $mail->AddCustomHeader($header_line);
	  if (strstr($header_line, 'From: ')) { //If the header line is the "From: " line then set the $from address.
	    $from = str_replace('From: ', '', $header_line);
	  }
	}
//	AddAttachment($path, $name = "", $encoding = "base64", 
//                           $type = "application/octet-stream")
                           
	$mail->Host = variable_get('smtp_host', '') . ';' . variable_get('smtp_hostbackup', '');
	$mail->Port = variable_get('smtp_port', '25');
	$mail->Mailer = "smtp";
	$mail->SMTPAuth = $auth;
	$mail->Username = $username;
	$mail->Password = $password;
	
	$mail->From = $from;
	$mail->FromName = $from_name;
	$mail->AddAddress($to);
	$mail->Subject = $subject;
	$mail->Body = $message;

  if (!empty($alt_message)) {
    $mail->IsHTML(true);
    $mail->AltBody = $alt_message;
  }

  if ($attachments) {
      foreach ($attachments as $attachment) {
          $mail->AddAttachment($attachment['path'], $attachment['name'], "base64", 
                              $attachment['type']);
      }
  }

	if(!$mail->Send()) {
		watchdog("error", "Error sending email: " . $mail->ErrorInfo . " From: $from To: $to");
		return false;
	}
	
	$mail->SmtpClose();
	return true;
}


function ictfax_sendmail_error($user, $fax, $errors) {
  $from = variable_get('site_mail', ini_get('sendmail_from'));
  $error_message = $errors;
  //foreach ($errors as $error_text) {
  //    $error_message .= $error_text."\n";
  //}
  
  // Mail Information:
  $variables = array('@username' => $user, '@send_to' => $fax['send_to'], '@mailto' => $fax['submitted_from'], '@error_message' => $error_message, '@date' => format_date(time()), '@site' => variable_get('site_name', 'email2fax'));

  //$subject = _ictfax_mail_text('failure_subject', $variables);
  //$body = _ictfax_mail_text('failure_body', $variables);

  $subject = t('FAX to @send_to failed', $variables);
  $body = t("Hi @username,\n\nWe just received an email from you for fax.\nat: @date \n\nBut unfortunatly FAX has been failed due to.\n\n@error_message\n\n\n Please correct above erros and try again. \n\n--  @site team", $variables);

  $headers = "From: $from\nReply-to: $from\nX-Mailer: Drupal\nReturn-path: $from\nErrors-to: $from";
  
  $mail_success = mail($fax['submitted_from'], $subject, $body, $headers);
  //$mail_success = mail($fax['submitted_to'], 'fax send failure', $errors, array());
  if (!$mail_success) {
    watchdog('ictfax', "Error mailing to $user at $fax[submitted_from].", array(), WATCHDOG_ERROR);
  }
}

function ictfax_sendmail_success($user, $fax) {

    $from = variable_get('site_mail', ini_get('sendmail_from'));

    // Mail Information:
    $variables = array('@username' => $user, '@send_to' => $fax['send_to'], '@mailto' => $fax['submitted_from'], '@pages' => $fax['pages'], '@date' => format_date(time()), '@site' => variable_get('site_name', 'email2fax'));

    //$subject = _ictfax_mail_text('success_subject', $variables);
    //$body = _ictfax_mail_text('success_body', $variables);

    $subject = t('Your fax delivered to @send_to successfully', $variables);
    $body = t("Hi @username,\n\nWe just successfully delivered an fax to @send_to.\nat: @date \nTotal Pages: @pages \n\n--  @site team", $variables);

    $headers = "From: $from\nReply-to: $from\nX-Mailer: Drupal\nReturn-path: $from\nErrors-to: $from";

    $mail_success = mail($fax['submitted_from'], $subject, $body, $headers);

    if (!$mail_success) {
      watchdog('ictfax', "Error mailing to $user at $fax[submitted_from].", array(), WATCHDOG_ERROR);
  }
}

function ictfax_settings() {
  // User e-mail settings.
  $group = form_textfield(t('Subject of success report'), 'fax_mail_success_subject', _ictfax_mail_text('success_subject'), 60, 180, t('This subject is used with email when a report of successful fax sent to customer.'));
  $group .= form_textarea(t('Body of success report'), 'fax_mail_success_body', _ictfax_mail_text('success_body'), 70, 10, t('This body is used with email when a report of successful fax sent to customer.'));
  $group .= form_textfield(t('Subject of failure report'), 'fax_mail_failure_subject', _ictfax_mail_text('failure_subject'), 60, 180, t('This subject is used with email when a report of failed fax sent to customer.'));
  $group .= form_textarea(t('Body of failure report'), 'fax_mail_failure_body', _ictfax_mail_text('failure_body'), 70, 10, t('This body is used with email when a report of failed fax sent to customer.'));
  $output .= form_group(t('FAX email settings'), $group, t('Customize the subject and body of above emails').' '. t('Available variables are:') .' %username, %send_to, %mailto, %error_message, %date, %site.');

  return $output;
}

function _ictfax_mail_text($messageid, $variables = array()) {
  // Check if an admin setting overrides the default string.
  if ($admin_setting = variable_get('fax_mail_' . $messageid, FALSE)) {
    return strtr($admin_setting, $variables);
  }
  // No override, return with default strings.
  else {
    switch ($messageid) {
      case 'success_subject':
        return t('Your fax delivered to %send_to successfully', $variables);
      case 'success_body':
      return t("Hi %username,\n\nWe just successfully delivered an fax to %send_to.\nat: %date \nTotal Pages: %pages \n\n--  %site team", $variables);
      case 'failure_subject':
        return t('FAX to %send_to failed', $variables);
      case 'failure_body':
        return t("Hi %username,\n\nWe just received an email from you for fax.\nat: %date \n\nBut unfortunatly FAX has been failed due to.\n\n%error_message\n\n\n Please correct above erros and try again. \n\n--  %site team", $variables);
    }
  }
}

/**
 * Resend fax
 *
 
function ictfax_resend($fax) {
    global $user;
    $uid = $user->uid;

    $fax['submitted_from'] = 'resend';
    $fax['status'] = '0';
    $fax['status_string'] = 'in queue';
    //$fax['cid'] = db_next_id('cid');
    $fax['uid'] = $uid;
    $fax['created'] = time();
    $fax['changed'] = time();
    $fax['rating'] = 3;  // Not sure what value should set here: falak
    

        $columns = array();
        $params = array();
        $types = array();

        foreach ($fax as $key => $value) {
           $columns[] = $key;
           $params[] = $value;
           $types[] = "'%s'";
        }
        $sql = 'INSERT INTO fax_outbox ('. implode(', ', $columns) .') VALUES ('. implode(', ', $types) .')';
        db_query($sql,$params);

        ictfax_sendfax($uid, $fax);
    
    drupal_set_message(t('<div name="faxstatus" id="faxstatus" class="message status">The new fax has added to queue.</div>'));
    $_SESSION['fax_cid'] = array($fax['cid']);
    $_SESSION['fax_status'] = 'in_queue';
    drupal_goto("ictfax");
}
*/

function ictfax_which($cmd, $search_path=NULL) {
  global $_ENV;
  $scpath = is_null($search_path) ? $_ENV['PATH'] : $search_path;

  foreach(explode(':', $scpath) as $path) {
    if(is_executable("$path/$cmd")) {
      return "$path/$cmd";
    }
  }

  if(is_null($search_path)) {
    $possible_path  = '/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin:/usr/X11R6/bin:/usr/local/apache/bin:/usr/local/mysql/bin';
    $possible_path .= ':' . real_name(dirname(__FILE__));
    return ictfax_which($cmd, $all_path);
  }

  return false;
}


function ictfax_popup() {

  ctools_include('ajax');
  ctools_include('modal');
  
  //ctools_include('form');
  // Have to do this or form submit won't work right.
  //drupal_add_js('misc/jquery.form.js');
  //ctools_add_js('ajax-responder');
  
  $form_state = array(
    'ajax' => TRUE,
    'title' => t('Phonebook'),
  );
  $output = ctools_modal_form_wrapper('ictfax_list_contacts', $form_state, array());
  //$output = ctools_build_form('ictfax_list_contacts', $form_state, array());
  
  if (isset($form_state['complete'])) {
    //$output[] = ctools_ajax_command_replace('#modal-complete', '<div id="modal-complete">' . $form_state['values']['#edit-send-to']['value'] . '</div>');
    $animal = '<div class="form-item form-type-textfield form-item-send-to">
      <label for="edit-send-to">Send To <span class="form-required" title="This field is required.">*</span></label>
      <input type="text" id="edit-send-to" name="send_to" value="'.$form_state['values']['phone_list'].'" size="60" maxlength="128" class="form-text required">
      <div class="description">fax #. where to send fax</div>
    </div>';
    //$animal = 'hello world';
    $output[] = ajax_command_html('.form-item-send-to', $animal);
    $output[] = ctools_modal_command_dismiss(t('Login Success'));
  }
  print ajax_render($output);

}

function ictfax_list_contacts($form, &$form_state, $edit = array()) {
  $edit += array(
    'table' => '',
    'phone_list' => '',
  );
  global $user;
  
  $header = array(
    'first_name' => t('First Name'),
    'last_name' => t('Last Name'),
    'fax' => t('Fax'),
    'email' => t('E-Mail'),
  );
  
  $query = db_select('ictcontact', 'co')->extend('PagerDefault');
  $query->fields('co', array('ictcontact_id', 'first_name','last_name', 'fax', 'email'));
  //$query->join('ictcontact_link','cl','co.ictcontact_id = cl.ictcontact_id');
  //$query->join('ictcontact_group','cg','cg.ictcontact_group_id = cl.ictcontact_group_id');
  //$query->addExpression('co', "CONCAT_WS(' ', last_name, first_name)", 'name');
  //$query->addField('cg', 'title', 'category');
  $query->condition('co.created_by', $user->uid,'=');
  $result = $query->limit(10)
            ->extend('TableSort')
            ->orderByHeader($header)
            ->execute();

  $options = array();
  while ($contact = $result->fetchAssoc()) {
    $options[$contact['ictcontact_id']] = array(
      'first_name' => check_plain($contact['first_name']),
      'last_name' => check_plain($contact['last_name']),
      'fax' => check_plain($contact['fax']),
      'email' => check_plain($contact['email']),
    );
  
  }
  
  $form['info']['table'] = array
  (
    '#type' => 'tableselect',
    '#header' => $header,
    '#options' => $options,
    '#multiple' => FALSE,
//    '#input'=>true,
    '#empty' => t('No record available'),
//    '#advanced_select'=>false,
    '#attributes' => '',
//    '#default_value'=> $edit['table'],
  );

  $form['info']['pager'] = array(
    '#type' => 'item',
    '#markup' => theme('pager'),
  );
  
  $form['phone_list'] = array(
      '#type'        => 'hidden',
//      '#value'       => $edit['phone_list'],
  );

  
  $form['info']['submit'] = array
  (
    '#type' => 'submit',
    '#value' => t('Select'),
  );

  return $form;
   
}

function ictfax_list_contacts_submit($form, &$form_state) {

  $contacts = $form_state['values'];

  $phone = array();
  $id = $contacts['table'];
  if($id > 0) {
      $sql    = "SELECT fax FROM {ictcontact} WHERE ictcontact_id =:ictcontact_id";
      $result = db_query($sql, array(':ictcontact_id' => $id))->fetchAssoc();
      //$phone[] = $result['phone'];
      $phone = $result['fax'];
    }
  //$phone = implode($phone, ',');
  $form_state['values']['phone_list'] = $phone;
    
  $form_state['complete'] = TRUE;
  
}

/*function releaseBalance($fax, $user, $estimated_cost) {
  echo exec("echo estimatedcost in release balance=$estimated_cost >> /tmp/mytest.txt");                    
  $user['reserve_credit'] = $user['reserve_credit'] - (float)$estimated_cost;
  echo exec("echo '".print_r($user, true)."' >> /tmp/mytest.txt");                    
  drupal_write_record('ictpbx_user', $user, 'ictpbx_user_id');
  return true;
}*/



?>







